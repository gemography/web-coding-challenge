<?php

namespace Proxies\__CG__\CTRV\CommonBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class User extends \CTRV\CommonBundle\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function setRegistrationiDateValue()
    {
        $this->__load();
        return parent::setRegistrationiDateValue();
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setUserid($userid)
    {
        $this->__load();
        return parent::setUserid($userid);
    }

    public function setUsername($username)
    {
        $this->__load();
        return parent::setUsername($username);
    }

    public function getUserid()
    {
        $this->__load();
        return parent::getUserid();
    }

    public function setLogin($login)
    {
        $this->__load();
        return parent::setLogin($login);
    }

    public function getLogin()
    {
        $this->__load();
        return parent::getLogin();
    }

    public function setPassword($password)
    {
        $this->__load();
        return parent::setPassword($password);
    }

    public function getPassword()
    {
        $this->__load();
        return parent::getPassword();
    }

    public function setFirstName($firstName)
    {
        $this->__load();
        return parent::setFirstName($firstName);
    }

    public function getFirstName()
    {
        $this->__load();
        return parent::getFirstName();
    }

    public function setLastName($lastName)
    {
        $this->__load();
        return parent::setLastName($lastName);
    }

    public function getLastName()
    {
        $this->__load();
        return parent::getLastName();
    }

    public function setEmail($email)
    {
        $this->__load();
        return parent::setEmail($email);
    }

    public function getEmail()
    {
        $this->__load();
        return parent::getEmail();
    }

    public function setRegistrationDate($registrationDate)
    {
        $this->__load();
        return parent::setRegistrationDate($registrationDate);
    }

    public function getRegistrationDate()
    {
        $this->__load();
        return parent::getRegistrationDate();
    }

    public function setLatitude($latitude)
    {
        $this->__load();
        return parent::setLatitude($latitude);
    }

    public function getLatitude()
    {
        $this->__load();
        return parent::getLatitude();
    }

    public function setLongitude($longitude)
    {
        $this->__load();
        return parent::setLongitude($longitude);
    }

    public function getLongitude()
    {
        $this->__load();
        return parent::getLongitude();
    }

    public function setIsActive($isActive)
    {
        $this->__load();
        return parent::setIsActive($isActive);
    }

    public function getIsActive()
    {
        $this->__load();
        return parent::getIsActive();
    }

    public function setIsBlocked($isBlocked)
    {
        $this->__load();
        return parent::setIsBlocked($isBlocked);
    }

    public function getIsBlocked()
    {
        $this->__load();
        return parent::getIsBlocked();
    }

    public function setCity(\CTRV\CommonBundle\Entity\City $city = NULL)
    {
        $this->__load();
        return parent::setCity($city);
    }

    public function getCity()
    {
        $this->__load();
        return parent::getCity();
    }

    public function addFollowedEvent(\CTRV\EventBundle\Entity\EventFollower $followedEvents)
    {
        $this->__load();
        return parent::addFollowedEvent($followedEvents);
    }

    public function removeFollowedEvent(\CTRV\EventBundle\Entity\EventFollower $followedEvents)
    {
        $this->__load();
        return parent::removeFollowedEvent($followedEvents);
    }

    public function getFollowedEvents()
    {
        $this->__load();
        return parent::getFollowedEvents();
    }

    public function addGroupsAdmin(\CTRV\FlowBundle\Entity\GroupUser $groupsAdmin)
    {
        $this->__load();
        return parent::addGroupsAdmin($groupsAdmin);
    }

    public function removeGroupsAdmin(\CTRV\FlowBundle\Entity\GroupUser $groupsAdmin)
    {
        $this->__load();
        return parent::removeGroupsAdmin($groupsAdmin);
    }

    public function getGroupsAdmin()
    {
        $this->__load();
        return parent::getGroupsAdmin();
    }

    public function addGroupsMember(\CTRV\FlowBundle\Entity\GroupMember $groupsMember)
    {
        $this->__load();
        return parent::addGroupsMember($groupsMember);
    }

    public function removeGroupsMember(\CTRV\FlowBundle\Entity\GroupMember $groupsMember)
    {
        $this->__load();
        return parent::removeGroupsMember($groupsMember);
    }

    public function getGroupsMember()
    {
        $this->__load();
        return parent::getGroupsMember();
    }

    public function addSentPendingsPrivateMessage(\CTRV\FlowBundle\Entity\PendingPrivateMessage $sentPendingsPrivateMessages)
    {
        $this->__load();
        return parent::addSentPendingsPrivateMessage($sentPendingsPrivateMessages);
    }

    public function removeSentPendingsPrivateMessage(\CTRV\FlowBundle\Entity\PendingPrivateMessage $sentPendingsPrivateMessages)
    {
        $this->__load();
        return parent::removeSentPendingsPrivateMessage($sentPendingsPrivateMessages);
    }

    public function getSentPendingsPrivateMessages()
    {
        $this->__load();
        return parent::getSentPendingsPrivateMessages();
    }

    public function addReceivedPendingsPrivateMessage(\CTRV\FlowBundle\Entity\PendingPrivateMessage $receivedPendingsPrivateMessages)
    {
        $this->__load();
        return parent::addReceivedPendingsPrivateMessage($receivedPendingsPrivateMessages);
    }

    public function removeReceivedPendingsPrivateMessage(\CTRV\FlowBundle\Entity\PendingPrivateMessage $receivedPendingsPrivateMessages)
    {
        $this->__load();
        return parent::removeReceivedPendingsPrivateMessage($receivedPendingsPrivateMessages);
    }

    public function getReceivedPendingsPrivateMessages()
    {
        $this->__load();
        return parent::getReceivedPendingsPrivateMessages();
    }

    public function addSentPrivateMessage(\CTRV\FlowBundle\Entity\PrivateMessage $sentPrivateMessages)
    {
        $this->__load();
        return parent::addSentPrivateMessage($sentPrivateMessages);
    }

    public function removeSentPrivateMessage(\CTRV\FlowBundle\Entity\PrivateMessage $sentPrivateMessages)
    {
        $this->__load();
        return parent::removeSentPrivateMessage($sentPrivateMessages);
    }

    public function getSentPrivateMessages()
    {
        $this->__load();
        return parent::getSentPrivateMessages();
    }

    public function addReceivedPrivateMessage(\CTRV\FlowBundle\Entity\PrivateMessage $receivedPrivateMessages)
    {
        $this->__load();
        return parent::addReceivedPrivateMessage($receivedPrivateMessages);
    }

    public function removeReceivedPrivateMessage(\CTRV\FlowBundle\Entity\PrivateMessage $receivedPrivateMessages)
    {
        $this->__load();
        return parent::removeReceivedPrivateMessage($receivedPrivateMessages);
    }

    public function getReceivedPrivateMessages()
    {
        $this->__load();
        return parent::getReceivedPrivateMessages();
    }

    public function addSentPublicMessage(\CTRV\FlowBundle\Entity\PrivateMessage $sentPublicMessages)
    {
        $this->__load();
        return parent::addSentPublicMessage($sentPublicMessages);
    }

    public function removeSentPublicMessage(\CTRV\FlowBundle\Entity\PrivateMessage $sentPublicMessages)
    {
        $this->__load();
        return parent::removeSentPublicMessage($sentPublicMessages);
    }

    public function getSentPublicMessages()
    {
        $this->__load();
        return parent::getSentPublicMessages();
    }

    public function addEvent(\CTRV\EventBundle\Entity\Event $events)
    {
        $this->__load();
        return parent::addEvent($events);
    }

    public function removeEvent(\CTRV\EventBundle\Entity\Event $events)
    {
        $this->__load();
        return parent::removeEvent($events);
    }

    public function getEvents()
    {
        $this->__load();
        return parent::getEvents();
    }

    public function addPlace(\CTRV\PlaceBundle\Entity\Place $places)
    {
        $this->__load();
        return parent::addPlace($places);
    }

    public function removePlace(\CTRV\PlaceBundle\Entity\Place $places)
    {
        $this->__load();
        return parent::removePlace($places);
    }

    public function getPlaces()
    {
        $this->__load();
        return parent::getPlaces();
    }

    public function addContact(\CTRV\CommonBundle\Entity\Contact $contacts)
    {
        $this->__load();
        return parent::addContact($contacts);
    }

    public function removeContact(\CTRV\CommonBundle\Entity\Contact $contacts)
    {
        $this->__load();
        return parent::removeContact($contacts);
    }

    public function getContacts()
    {
        $this->__load();
        return parent::getContacts();
    }

    public function addOwner(\CTRV\CommonBundle\Entity\Contact $owners)
    {
        $this->__load();
        return parent::addOwner($owners);
    }

    public function removeOwner(\CTRV\CommonBundle\Entity\Contact $owners)
    {
        $this->__load();
        return parent::removeOwner($owners);
    }

    public function getOwners()
    {
        $this->__load();
        return parent::getOwners();
    }

    public function addComment(\CTRV\CommonBundle\Entity\Comment $comments)
    {
        $this->__load();
        return parent::addComment($comments);
    }

    public function removeComment(\CTRV\CommonBundle\Entity\Comment $comments)
    {
        $this->__load();
        return parent::removeComment($comments);
    }

    public function getComments()
    {
        $this->__load();
        return parent::getComments();
    }

    public function addNote(\CTRV\CommonBundle\Entity\Note $notes)
    {
        $this->__load();
        return parent::addNote($notes);
    }

    public function removeNote(\CTRV\CommonBundle\Entity\Note $notes)
    {
        $this->__load();
        return parent::removeNote($notes);
    }

    public function getNotes()
    {
        $this->__load();
        return parent::getNotes();
    }

    public function setAddress($address)
    {
        $this->__load();
        return parent::setAddress($address);
    }

    public function getAddress()
    {
        $this->__load();
        return parent::getAddress();
    }

    public function setSalt($salt)
    {
        $this->__load();
        return parent::setSalt($salt);
    }

    public function getSalt()
    {
        $this->__load();
        return parent::getSalt();
    }

    public function setNumeroRue($numeroRue)
    {
        $this->__load();
        return parent::setNumeroRue($numeroRue);
    }

    public function getNumeroRue()
    {
        $this->__load();
        return parent::getNumeroRue();
    }

    public function serialize()
    {
        $this->__load();
        return parent::serialize();
    }

    public function unserialize($serialized)
    {
        $this->__load();
        return parent::unserialize($serialized);
    }

    public function getRoles()
    {
        $this->__load();
        return parent::getRoles();
    }

    public function getUsername()
    {
        $this->__load();
        return parent::getUsername();
    }

    public function eraseCredentials()
    {
        $this->__load();
        return parent::eraseCredentials();
    }

    public function isAccountNonExpired()
    {
        $this->__load();
        return parent::isAccountNonExpired();
    }

    public function isEqualTo(\Symfony\Component\Security\Core\User\UserInterface $user)
    {
        $this->__load();
        return parent::isEqualTo($user);
    }

    public function isAccountNonLocked()
    {
        $this->__load();
        return parent::isAccountNonLocked();
    }

    public function isCredentialsNonExpired()
    {
        $this->__load();
        return parent::isCredentialsNonExpired();
    }

    public function isEnabled()
    {
        $this->__load();
        return parent::isEnabled();
    }

    public function setLanguage($language)
    {
        $this->__load();
        return parent::setLanguage($language);
    }

    public function getLanguage()
    {
        $this->__load();
        return parent::getLanguage();
    }

    public function addUpdatedEvent(\CTRV\EventBundle\Entity\UpdatedEvent $updatedEvents)
    {
        $this->__load();
        return parent::addUpdatedEvent($updatedEvents);
    }

    public function removeUpdatedEvent(\CTRV\EventBundle\Entity\UpdatedEvent $updatedEvents)
    {
        $this->__load();
        return parent::removeUpdatedEvent($updatedEvents);
    }

    public function getUpdatedEvents()
    {
        $this->__load();
        return parent::getUpdatedEvents();
    }

    public function setRole(\CTRV\CommonBundle\Entity\Role $role = NULL)
    {
        $this->__load();
        return parent::setRole($role);
    }

    public function getRole()
    {
        $this->__load();
        return parent::getRole();
    }

    public function setState($state)
    {
        $this->__load();
        return parent::setState($state);
    }

    public function getState()
    {
        $this->__load();
        return parent::getState();
    }

    public function setLastLoginDate($lastLoginDate)
    {
        $this->__load();
        return parent::setLastLoginDate($lastLoginDate);
    }

    public function getLastLoginDate()
    {
        $this->__load();
        return parent::getLastLoginDate();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'userid', 'login', 'salt', 'password', 'firstName', 'lastName', 'email', 'registrationDate', 'latitude', 'longitude', 'isActive', 'isBlocked', 'state', 'lastLoginDate', 'address', 'language', 'city', 'followedEvents', 'groupsAdmin', 'groupsMember', 'role', 'sentPendingsPrivateMessages', 'receivedPendingsPrivateMessages', 'sentPrivateMessages', 'receivedPrivateMessages', 'sentPublicMessages', 'events', 'updated_events', 'places', 'contacts', 'owners', 'comments', 'notes');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}