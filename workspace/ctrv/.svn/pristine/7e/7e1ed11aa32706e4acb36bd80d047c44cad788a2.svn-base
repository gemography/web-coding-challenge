<?php

namespace CTRV\CommonBundle\Entity;

use CTRV\CommonBundle\DependencyInjection\Constants;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Mapping as ORM;


class CommentRepository extends EntityRepository
{
	
	/**
	 * retourne la liste de commnetaires d'agendas de la ville courante
	 */
	public function getAgendaComment ($city) {
		
		$qb = $this->createQueryBuilder("p")
		->select('p as comment')
		->from('CTRV\EventBundle\Entity\Event','a')
		->addSelect('a.title')
		->where("p.idEntity=a.id")
		->andwhere("p.typeEntity=?1")
		->andWhere("a.city=?2")
		->andWhere('a.isPrivate=?3')
		->andWhere('a.isRealtime=?4')
		->orderBy('p.date', 'DESC')
		->setParameter(1, Constants::TYPE_ENTIY_AGENDA)
		->setParameter(2, $city)
		->setParameter(3,false)
		->setParameter(4,false)
		;
		return $qb->getQuery()->getResult();
	}
	
	/**
	 * retourne la liste de commnetaires d'événements de la ville courante
	 */
   public function getEventComment ($city) {
   	
		$qb = $this->createQueryBuilder("p")
		->select('p as comment')
		->from('CTRV\EventBundle\Entity\Event','a')
		->addSelect('a.title')
		->where("p.idEntity=a.id")
		->andwhere("p.typeEntity=?1")
		->andWhere("a.city=?2")
		->andWhere('a.isPrivate=?3')
		->andWhere('a.isRealtime=?4')
		->orderBy('p.date', 'DESC')
		->setParameter(1, Constants::TYPE_ENTIY_EVENT)
		->setParameter(2, $city)
		->setParameter(3,false)
		->setParameter(4,true)
        ;
		return $qb->getQuery()->getResult();
	}
	
	/**
	 * retourne la liste de commnetaires de places de la ville courante
	 */   
   public function getPlaceComment ($city) {
   	
		$qb = $this->createQueryBuilder("p")
		->select('p as comment')
		->from('CTRV\PlaceBundle\Entity\Place','a')
		->addSelect('a.title')
		->where("p.idEntity=a.id")
		->andwhere("p.typeEntity=?1")
		->andWhere("a.city=?2")
		->orderBy('p.date', 'DESC')
		->setParameter(1, Constants::TYPE_ENTIY_PLACE)
		->setParameter(2, $city)
		;
		return $qb->getQuery()->getResult();
	}
	
}