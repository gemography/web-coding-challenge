<?php

namespace CTRV\CommonBundle\Entity;

use CTRV\CommonBundle\DependencyInjection\Constants;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Mapping as ORM;

/**
 * AbuseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AbuseRepository extends EntityRepository
{
	public function getAllCommentAbuse(){
 $qb= $this->createQueryBuilder("a")
 ->select('a.id,a.entityId')
 ->from('CTRV\CommonBundle\Entity\Comment','c')
 ->from('CTRV\FlowBundle\Entity\PublicMessage','pm')
 ->addSelect('c.content,a.entityType')
 ->where("a.entityId=c.id OR a.entityId=pm.id")
 ->orderBy('a.entityId','DESC')
 ->groupBy('a.entityId')
 ;
 return $qb->getQuery()->getResult();
}

/**
 * Retourne la liste de tous les commentaires signalés des évenements de la ville courante
 */
public function getEventCommentAbuse($city){
	$qb= $this->createQueryBuilder("a")
	->select('a.id,a.entityId')
	->from('CTRV\CommonBundle\Entity\Comment','c')
	->from('CTRV\EventBundle\Entity\Event','e')
	->addSelect('c.content,a.entityType, e.title')
	->where("a.entityId=c.id")
	->andWhere("c.idEntity=e.id")
	->andWhere("a.entityType=?1")
	->andWhere("e.city=?2")
	->orderBy('a.id','DESC')
	->setParameter(1,Constants::EVENT_COMMENT_ABUSE)
	->setParameter(2,$city)
	->groupBy('a.entityId');
	return $qb->getQuery()->getResult();
}

/**
 * Retourne la liste de tous les abus sur les commentaires des places
 */
     public function getPlaceCommentAbuse($city){
	$qb= $this->createQueryBuilder("a")
	->select('a.id')
	->from('CTRV\CommonBundle\Entity\Comment','c')
	->from('CTRV\PlaceBundle\Entity\Place','p')
	->addSelect('c.content,a.entityType, p.title')
	->where("a.entityId=c.id")
	->andWhere("c.idEntity=p.id")
	->andWhere("a.entityType=?1")
	->andWhere("p.city=?2")
	->orderBy('a.id','DESC')
	->setParameter(1,Constants::PLACE_COMMENT_ABUSE)
	->setParameter(2,$city)
	->groupBy('a.entityId');
	return $qb->getQuery()->getResult();
}


}
