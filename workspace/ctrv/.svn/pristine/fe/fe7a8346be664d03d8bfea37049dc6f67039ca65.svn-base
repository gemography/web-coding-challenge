<html>
<head>
<title>Docs For Class PHPExcel_Shared_String</title>
<link rel="stylesheet" type="text/css" href="../media/style.css">
</head>
<body>

<table border="0" cellspacing="0" cellpadding="0" height="48" width="100%">
  <tr>
    <td class="header_top">PHPExcel_Shared</td>
  </tr>
  <tr><td class="header_line"><img src="../media/empty.png" width="1" height="1" border="0" alt=""  /></td></tr>
  <tr>
    <td class="header_menu">
        
                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                      		  [ <a href="../classtrees_PHPExcel_Shared.html" class="menu">class tree: PHPExcel_Shared</a> ]
		  [ <a href="../elementindex_PHPExcel_Shared.html" class="menu">index: PHPExcel_Shared</a> ]
		  	    [ <a href="../elementindex.html" class="menu">all elements</a> ]
    </td>
  </tr>
  <tr><td class="header_line"><img src="../media/empty.png" width="1" height="1" border="0" alt=""  /></td></tr>
</table>

<table width="100%" border="0" cellpadding="0" cellspacing="0">
  <tr valign="top">
    <td width="200" class="menu">
	<div id="todolist">
			<p><a href="../todolist.html">Todo List</a></p>
	</div>
      <b>Packages:</b><br />
              <a href="../li_PHPExcel.html">PHPExcel</a><br />
              <a href="../li_JAMA.html">JAMA</a><br />
              <a href="../li_Math_Stats.html">Math_Stats</a><br />
              <a href="../li_PHPExcel_CachedObjectStorage.html">PHPExcel_CachedObjectStorage</a><br />
              <a href="../li_PHPExcel_Calculation.html">PHPExcel_Calculation</a><br />
              <a href="../li_PHPExcel_Cell.html">PHPExcel_Cell</a><br />
              <a href="../li_PHPExcel_Chart.html">PHPExcel_Chart</a><br />
              <a href="../li_PHPExcel_Chart_Renderer.html">PHPExcel_Chart_Renderer</a><br />
              <a href="../li_PHPExcel_Reader.html">PHPExcel_Reader</a><br />
              <a href="../li_PHPExcel_Reader_Excel5.html">PHPExcel_Reader_Excel5</a><br />
              <a href="../li_PHPExcel_Reader_Excel2007.html">PHPExcel_Reader_Excel2007</a><br />
              <a href="../li_PHPExcel_RichText.html">PHPExcel_RichText</a><br />
              <a href="../li_PHPExcel_Settings.html">PHPExcel_Settings</a><br />
              <a href="../li_PHPExcel_Shared.html">PHPExcel_Shared</a><br />
              <a href="../li_PHPExcel_Shared_Escher.html">PHPExcel_Shared_Escher</a><br />
              <a href="../li_PHPExcel_Shared_OLE.html">PHPExcel_Shared_OLE</a><br />
              <a href="../li_PHPExcel_Shared_Trend.html">PHPExcel_Shared_Trend</a><br />
              <a href="../li_PHPExcel_Shared_ZipArchive.html">PHPExcel_Shared_ZipArchive</a><br />
              <a href="../li_PHPExcel_Style.html">PHPExcel_Style</a><br />
              <a href="../li_PHPExcel_Worksheet.html">PHPExcel_Worksheet</a><br />
              <a href="../li_PHPExcel_Worksheet_Drawing.html">PHPExcel_Worksheet_Drawing</a><br />
              <a href="../li_PHPExcel_Writer.html">PHPExcel_Writer</a><br />
              <a href="../li_PHPExcel_Writer_Excel5.html">PHPExcel_Writer_Excel5</a><br />
              <a href="../li_PHPExcel_Writer_Excel2007.html">PHPExcel_Writer_Excel2007</a><br />
            <br /><br />
                        <b>Files:</b><br />
      	  <div class="package">
			<a href="../PHPExcel_Shared/_PHPExcel---Shared---CodePage.php.html">		CodePage.php
		</a><br>
			<a href="../PHPExcel_Shared/_PHPExcel---Shared---Date.php.html">		Date.php
		</a><br>
			<a href="../PHPExcel_Shared/_PHPExcel---Shared---Drawing.php.html">		Drawing.php
		</a><br>
			<a href="../PHPExcel_Shared/_PHPExcel---Shared---Excel5.php.html">		Excel5.php
		</a><br>
			<a href="../PHPExcel_Shared/_PHPExcel---Shared---File.php.html">		File.php
		</a><br>
			<a href="../PHPExcel_Shared/_PHPExcel---Shared---Font.php.html">		Font.php
		</a><br>
			<a href="../PHPExcel_Shared/_PHPExcel---Shared---OLERead.php.html">		OLERead.php
		</a><br>
			<a href="../PHPExcel_Shared/_PHPExcel---Shared---PasswordHasher.php.html">		PasswordHasher.php
		</a><br>
			<a href="../PHPExcel_Shared/_PHPExcel---Shared---String.php.html">		String.php
		</a><br>
			<a href="../PHPExcel_Shared/_PHPExcel---Shared---XMLWriter.php.html">		XMLWriter.php
		</a><br>
			<a href="../PHPExcel_Shared/_PHPExcel---Shared---ZipStreamWrapper.php.html">		ZipStreamWrapper.php
		</a><br>
	  </div><br />
      
      
            <b>Classes:</b><br />
        <div class="package">
		    		<a href="../PHPExcel_Shared/PHPExcel_Shared_CodePage.html">PHPExcel_Shared_CodePage</a><br />
	    		<a href="../PHPExcel_Shared/PHPExcel_Shared_Date.html">PHPExcel_Shared_Date</a><br />
	    		<a href="../PHPExcel_Shared/PHPExcel_Shared_Drawing.html">PHPExcel_Shared_Drawing</a><br />
	    		<a href="../PHPExcel_Shared/PHPExcel_Shared_Excel5.html">PHPExcel_Shared_Excel5</a><br />
	    		<a href="../PHPExcel_Shared/PHPExcel_Shared_File.html">PHPExcel_Shared_File</a><br />
	    		<a href="../PHPExcel_Shared/PHPExcel_Shared_Font.html">PHPExcel_Shared_Font</a><br />
	    		<a href="../PHPExcel_Shared/PHPExcel_Shared_OLERead.html">PHPExcel_Shared_OLERead</a><br />
	    		<a href="../PHPExcel_Shared/PHPExcel_Shared_PasswordHasher.html">PHPExcel_Shared_PasswordHasher</a><br />
	    		<a href="../PHPExcel_Shared/PHPExcel_Shared_String.html">PHPExcel_Shared_String</a><br />
	    		<a href="../PHPExcel_Shared/PHPExcel_Shared_XMLWriter.html">PHPExcel_Shared_XMLWriter</a><br />
	    		<a href="../PHPExcel_Shared/PHPExcel_Shared_ZipStreamWrapper.html">PHPExcel_Shared_ZipStreamWrapper</a><br />
	  </div>
                </td>
    <td>
      <table cellpadding="10" cellspacing="0" width="100%" border="0"><tr><td valign="top">

<h1>Class: PHPExcel_Shared_String</h1>
Source Location: /PHPExcel/Shared/String.php<br /><br />


<table width="100%" border="0">
<tr><td valign="top">

<h3><a href="#class_details">Class Overview</a></h3>
<pre></pre><br />
<div class="description">PHPExcel_Shared_String</div><br /><br />
<h4>Author(s):</h4>
<ul>
        </ul>




      
  

<h4>Copyright:</h4>
<ul>
  <li>Copyright (c) 2006 - 2012 PHPExcel (http://www.codeplex.com/PHPExcel)</li>
</ul>
        
</td>


<td valign="top">
<h3><a href="#class_consts">Constants</a></h3>
<ul>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#constSTRING_REGEXP_FRACTION">STRING_REGEXP_FRACTION</a></li>
  </ul>
</td>

<td valign="top">
<h3><a href="#class_methods">Methods</a></h3>
<ul>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#methodbuildCharacterSets">buildCharacterSets</a></li>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#methodControlCharacterOOXML2PHP">ControlCharacterOOXML2PHP</a></li>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#methodControlCharacterPHP2OOXML">ControlCharacterPHP2OOXML</a></li>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#methodConvertEncoding">ConvertEncoding</a></li>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#methodconvertToNumberIfFraction">convertToNumberIfFraction</a></li>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#methodCountCharacters">CountCharacters</a></li>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#methodFormatNumber">FormatNumber</a></li>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#methodgetCurrencyCode">getCurrencyCode</a></li>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#methodgetDecimalSeparator">getDecimalSeparator</a></li>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#methodgetIsIconvEnabled">getIsIconvEnabled</a></li>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#methodgetIsMbstringEnabled">getIsMbstringEnabled</a></li>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#methodgetThousandsSeparator">getThousandsSeparator</a></li>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#methodIsUTF8">IsUTF8</a></li>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#methodSanitizeUTF8">SanitizeUTF8</a></li>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#methodsetCurrencyCode">setCurrencyCode</a></li>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#methodsetDecimalSeparator">setDecimalSeparator</a></li>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#methodsetThousandsSeparator">setThousandsSeparator</a></li>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#methodSubstring">Substring</a></li>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#methodSYLKtoUTF8">SYLKtoUTF8</a></li>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#methodtestStringAsNumeric">testStringAsNumeric</a></li>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#methodUTF8toBIFF8UnicodeLong">UTF8toBIFF8UnicodeLong</a></li>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#methodUTF8toBIFF8UnicodeShort">UTF8toBIFF8UnicodeShort</a></li>
    <li><a href="../PHPExcel_Shared/PHPExcel_Shared_String.html#methodutf16_decode">utf16_decode</a></li>
  </ul>
</td>

</tr></table>
<hr />

<table width="100%" border="0"><tr>






</tr></table>
<hr />

<a name="class_details"></a>
<h3>Class Details</h3>
<div class="tags">
[line 36]<br />
PHPExcel_Shared_String<br /><br /><br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>copyright:</b>&nbsp;&nbsp;</td><td>Copyright (c) 2006 - 2012 PHPExcel (http://www.codeplex.com/PHPExcel)</td>
  </tr>
</table>
</div>
</div><br /><br />
<div class="top">[ <a href="#top">Top</a> ]</div><br />


<hr />
<a name="class_methods"></a>
<h3>Class Methods</h3>
<div class="tags">
  <hr />
	<a name="methodbuildCharacterSets"></a>
	<h3>static method buildCharacterSets <span class="smalllinenumber">[line 332]</span></h3>
	<div class="function">
    <table width="90%" border="0" cellspacing="0" cellpadding="1"><tr><td class="code_border">
    <table width="100%" border="0" cellspacing="0" cellpadding="2"><tr><td class="code">
		<code>static void buildCharacterSets(
)</code>
    </td></tr></table>
    </td></tr></table><br />
	
		<br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>access:</b>&nbsp;&nbsp;</td><td>public</td>
  </tr>
</table>
</div>
<br /><br />

	
        <div class="top">[ <a href="#top">Top</a> ]</div>
  </div>
  <hr />
	<a name="methodControlCharacterOOXML2PHP"></a>
	<h3>static method ControlCharacterOOXML2PHP <span class="smalllinenumber">[line 355]</span></h3>
	<div class="function">
    <table width="90%" border="0" cellspacing="0" cellpadding="1"><tr><td class="code_border">
    <table width="100%" border="0" cellspacing="0" cellpadding="2"><tr><td class="code">
		<code>static string ControlCharacterOOXML2PHP(
[string
$value = ''])</code>
    </td></tr></table>
    </td></tr></table><br />
	
		Convert from OpenXML escaped control character to PHP control character<br /><br /><p>Excel 2007 team:  ----------------  That's correct, control characters are stored directly in the shared-strings table.  We do encode characters that cannot be represented in XML using the following escape sequence:  _xHHHH_ where H represents a hexadecimal character in the character's value...  So you could end up with something like _x0008_ in a string (either in a cell value (&lt;v&gt;)  element or in the shared string &lt;t&gt; element.</p><br /><br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>access:</b>&nbsp;&nbsp;</td><td>public</td>
  </tr>
</table>
</div>
<br /><br />

	
        <h4>Parameters:</h4>
    <div class="tags">
    <table border="0" cellspacing="0" cellpadding="0">
          <tr>
        <td class="type">string&nbsp;&nbsp;</td>
        <td><b>$value</b>&nbsp;&nbsp;</td>
        <td>Value to unescape</td>
      </tr>
        </table>
    </div><br />
        <div class="top">[ <a href="#top">Top</a> ]</div>
  </div>
  <hr />
	<a name="methodControlCharacterPHP2OOXML"></a>
	<h3>static method ControlCharacterPHP2OOXML <span class="smalllinenumber">[line 373]</span></h3>
	<div class="function">
    <table width="90%" border="0" cellspacing="0" cellpadding="1"><tr><td class="code_border">
    <table width="100%" border="0" cellspacing="0" cellpadding="2"><tr><td class="code">
		<code>static string ControlCharacterPHP2OOXML(
[string
$value = ''])</code>
    </td></tr></table>
    </td></tr></table><br />
	
		Convert from PHP control character to OpenXML escaped control character<br /><br /><p>Excel 2007 team:  ----------------  That's correct, control characters are stored directly in the shared-strings table.  We do encode characters that cannot be represented in XML using the following escape sequence:  _xHHHH_ where H represents a hexadecimal character in the character's value...  So you could end up with something like _x0008_ in a string (either in a cell value (&lt;v&gt;)  element or in the shared string &lt;t&gt; element.</p><br /><br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>access:</b>&nbsp;&nbsp;</td><td>public</td>
  </tr>
</table>
</div>
<br /><br />

	
        <h4>Parameters:</h4>
    <div class="tags">
    <table border="0" cellspacing="0" cellpadding="0">
          <tr>
        <td class="type">string&nbsp;&nbsp;</td>
        <td><b>$value</b>&nbsp;&nbsp;</td>
        <td>Value to escape</td>
      </tr>
        </table>
    </div><br />
        <div class="top">[ <a href="#top">Top</a> ]</div>
  </div>
  <hr />
	<a name="methodConvertEncoding"></a>
	<h3>static method ConvertEncoding <span class="smalllinenumber">[line 493]</span></h3>
	<div class="function">
    <table width="90%" border="0" cellspacing="0" cellpadding="1"><tr><td class="code_border">
    <table width="100%" border="0" cellspacing="0" cellpadding="2"><tr><td class="code">
		<code>static string ConvertEncoding(
string
$value, string
$to, string
$from)</code>
    </td></tr></table>
    </td></tr></table><br />
	
		Convert string from one encoding to another. First try iconv, then mbstring, or no convertion<br /><br /><br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>access:</b>&nbsp;&nbsp;</td><td>public</td>
  </tr>
</table>
</div>
<br /><br />

	
        <h4>Parameters:</h4>
    <div class="tags">
    <table border="0" cellspacing="0" cellpadding="0">
          <tr>
        <td class="type">string&nbsp;&nbsp;</td>
        <td><b>$value</b>&nbsp;&nbsp;</td>
        <td></td>
      </tr>
          <tr>
        <td class="type">string&nbsp;&nbsp;</td>
        <td><b>$to</b>&nbsp;&nbsp;</td>
        <td>Encoding to convert to, e.g. 'UTF-8'</td>
      </tr>
          <tr>
        <td class="type">string&nbsp;&nbsp;</td>
        <td><b>$from</b>&nbsp;&nbsp;</td>
        <td>Encoding to convert from, e.g. 'UTF-16LE'</td>
      </tr>
        </table>
    </div><br />
        <div class="top">[ <a href="#top">Top</a> ]</div>
  </div>
  <hr />
	<a name="methodconvertToNumberIfFraction"></a>
	<h3>static method convertToNumberIfFraction <span class="smalllinenumber">[line 595]</span></h3>
	<div class="function">
    <table width="90%" border="0" cellspacing="0" cellpadding="1"><tr><td class="code_border">
    <table width="100%" border="0" cellspacing="0" cellpadding="2"><tr><td class="code">
		<code>static boolean convertToNumberIfFraction(
string
&$operand)</code>
    </td></tr></table>
    </td></tr></table><br />
	
		Identify whether a string contains a fractional numeric value,     and convert it to a numeric if it is<br /><br /><br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>access:</b>&nbsp;&nbsp;</td><td>public</td>
  </tr>
</table>
</div>
<br /><br />

	
        <h4>Parameters:</h4>
    <div class="tags">
    <table border="0" cellspacing="0" cellpadding="0">
          <tr>
        <td class="type">string&nbsp;&nbsp;</td>
        <td><b>&$operand</b>&nbsp;&nbsp;</td>
        <td>string value to test</td>
      </tr>
        </table>
    </div><br />
        <div class="top">[ <a href="#top">Top</a> ]</div>
  </div>
  <hr />
	<a name="methodCountCharacters"></a>
	<h3>static method CountCharacters <span class="smalllinenumber">[line 551]</span></h3>
	<div class="function">
    <table width="90%" border="0" cellspacing="0" cellpadding="1"><tr><td class="code_border">
    <table width="100%" border="0" cellspacing="0" cellpadding="2"><tr><td class="code">
		<code>static int CountCharacters(
string
$value, [string
$enc = 'UTF-8'])</code>
    </td></tr></table>
    </td></tr></table><br />
	
		Get character count. First try mbstring, then iconv, finally strlen<br /><br /><br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>return:</b>&nbsp;&nbsp;</td><td>Character count</td>
  </tr>
  <tr>
    <td><b>access:</b>&nbsp;&nbsp;</td><td>public</td>
  </tr>
</table>
</div>
<br /><br />

	
        <h4>Parameters:</h4>
    <div class="tags">
    <table border="0" cellspacing="0" cellpadding="0">
          <tr>
        <td class="type">string&nbsp;&nbsp;</td>
        <td><b>$value</b>&nbsp;&nbsp;</td>
        <td></td>
      </tr>
          <tr>
        <td class="type">string&nbsp;&nbsp;</td>
        <td><b>$enc</b>&nbsp;&nbsp;</td>
        <td>Encoding</td>
      </tr>
        </table>
    </div><br />
        <div class="top">[ <a href="#top">Top</a> ]</div>
  </div>
  <hr />
	<a name="methodFormatNumber"></a>
	<h3>static method FormatNumber <span class="smalllinenumber">[line 416]</span></h3>
	<div class="function">
    <table width="90%" border="0" cellspacing="0" cellpadding="1"><tr><td class="code_border">
    <table width="100%" border="0" cellspacing="0" cellpadding="2"><tr><td class="code">
		<code>static string FormatNumber(
mixed
$value)</code>
    </td></tr></table>
    </td></tr></table><br />
	
		Formats a numeric value as a string for output in various output writers forcing  point as decimal separator in case locale is other than English.<br /><br /><br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>access:</b>&nbsp;&nbsp;</td><td>public</td>
  </tr>
</table>
</div>
<br /><br />

	
        <h4>Parameters:</h4>
    <div class="tags">
    <table border="0" cellspacing="0" cellpadding="0">
          <tr>
        <td class="type">mixed&nbsp;&nbsp;</td>
        <td><b>$value</b>&nbsp;&nbsp;</td>
        <td></td>
      </tr>
        </table>
    </div><br />
        <div class="top">[ <a href="#top">Top</a> ]</div>
  </div>
  <hr />
	<a name="methodgetCurrencyCode"></a>
	<h3>static method getCurrencyCode <span class="smalllinenumber">[line 670]</span></h3>
	<div class="function">
    <table width="90%" border="0" cellspacing="0" cellpadding="1"><tr><td class="code_border">
    <table width="100%" border="0" cellspacing="0" cellpadding="2"><tr><td class="code">
		<code>static string getCurrencyCode(
)</code>
    </td></tr></table>
    </td></tr></table><br />
	
		Get the currency code. If it has not yet been set explicitly, try to obtain the 		symbol information from locale.<br /><br /><br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>access:</b>&nbsp;&nbsp;</td><td>public</td>
  </tr>
</table>
</div>
<br /><br />

	
        <div class="top">[ <a href="#top">Top</a> ]</div>
  </div>
  <hr />
	<a name="methodgetDecimalSeparator"></a>
	<h3>static method getDecimalSeparator <span class="smalllinenumber">[line 611]</span></h3>
	<div class="function">
    <table width="90%" border="0" cellspacing="0" cellpadding="1"><tr><td class="code_border">
    <table width="100%" border="0" cellspacing="0" cellpadding="2"><tr><td class="code">
		<code>static string getDecimalSeparator(
)</code>
    </td></tr></table>
    </td></tr></table><br />
	
		Get the decimal separator. If it has not yet been set explicitly, try to obtain number  formatting information from locale.<br /><br /><br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>access:</b>&nbsp;&nbsp;</td><td>public</td>
  </tr>
</table>
</div>
<br /><br />

	
        <div class="top">[ <a href="#top">Top</a> ]</div>
  </div>
  <hr />
	<a name="methodgetIsIconvEnabled"></a>
	<h3>static method getIsIconvEnabled <span class="smalllinenumber">[line 293]</span></h3>
	<div class="function">
    <table width="90%" border="0" cellspacing="0" cellpadding="1"><tr><td class="code_border">
    <table width="100%" border="0" cellspacing="0" cellpadding="2"><tr><td class="code">
		<code>static boolean getIsIconvEnabled(
)</code>
    </td></tr></table>
    </td></tr></table><br />
	
		Get whether iconv extension is available<br /><br /><br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>access:</b>&nbsp;&nbsp;</td><td>public</td>
  </tr>
</table>
</div>
<br /><br />

	
        <div class="top">[ <a href="#top">Top</a> ]</div>
  </div>
  <hr />
	<a name="methodgetIsMbstringEnabled"></a>
	<h3>static method getIsMbstringEnabled <span class="smalllinenumber">[line 276]</span></h3>
	<div class="function">
    <table width="90%" border="0" cellspacing="0" cellpadding="1"><tr><td class="code_border">
    <table width="100%" border="0" cellspacing="0" cellpadding="2"><tr><td class="code">
		<code>static boolean getIsMbstringEnabled(
)</code>
    </td></tr></table>
    </td></tr></table><br />
	
		Get whether mbstring extension is available<br /><br /><br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>access:</b>&nbsp;&nbsp;</td><td>public</td>
  </tr>
</table>
</div>
<br /><br />

	
        <div class="top">[ <a href="#top">Top</a> ]</div>
  </div>
  <hr />
	<a name="methodgetThousandsSeparator"></a>
	<h3>static method getThousandsSeparator <span class="smalllinenumber">[line 643]</span></h3>
	<div class="function">
    <table width="90%" border="0" cellspacing="0" cellpadding="1"><tr><td class="code_border">
    <table width="100%" border="0" cellspacing="0" cellpadding="2"><tr><td class="code">
		<code>static string getThousandsSeparator(
)</code>
    </td></tr></table>
    </td></tr></table><br />
	
		Get the thousands separator. If it has not yet been set explicitly, try to obtain number  formatting information from locale.<br /><br /><br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>access:</b>&nbsp;&nbsp;</td><td>public</td>
  </tr>
</table>
</div>
<br /><br />

	
        <div class="top">[ <a href="#top">Top</a> ]</div>
  </div>
  <hr />
	<a name="methodIsUTF8"></a>
	<h3>static method IsUTF8 <span class="smalllinenumber">[line 405]</span></h3>
	<div class="function">
    <table width="90%" border="0" cellspacing="0" cellpadding="1"><tr><td class="code_border">
    <table width="100%" border="0" cellspacing="0" cellpadding="2"><tr><td class="code">
		<code>static boolean IsUTF8(
[string
$value = ''])</code>
    </td></tr></table>
    </td></tr></table><br />
	
		Check if a string contains UTF8 data<br /><br /><br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>access:</b>&nbsp;&nbsp;</td><td>public</td>
  </tr>
</table>
</div>
<br /><br />

	
        <h4>Parameters:</h4>
    <div class="tags">
    <table border="0" cellspacing="0" cellpadding="0">
          <tr>
        <td class="type">string&nbsp;&nbsp;</td>
        <td><b>$value</b>&nbsp;&nbsp;</td>
        <td></td>
      </tr>
        </table>
    </div><br />
        <div class="top">[ <a href="#top">Top</a> ]</div>
  </div>
  <hr />
	<a name="methodSanitizeUTF8"></a>
	<h3>static method SanitizeUTF8 <span class="smalllinenumber">[line 383]</span></h3>
	<div class="function">
    <table width="90%" border="0" cellspacing="0" cellpadding="1"><tr><td class="code_border">
    <table width="100%" border="0" cellspacing="0" cellpadding="2"><tr><td class="code">
		<code>static string SanitizeUTF8(
string
$value)</code>
    </td></tr></table>
    </td></tr></table><br />
	
		Try to sanitize UTF8, stripping invalid byte sequences. Not perfect. Does not surrogate characters.<br /><br /><br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>access:</b>&nbsp;&nbsp;</td><td>public</td>
  </tr>
</table>
</div>
<br /><br />

	
        <h4>Parameters:</h4>
    <div class="tags">
    <table border="0" cellspacing="0" cellpadding="0">
          <tr>
        <td class="type">string&nbsp;&nbsp;</td>
        <td><b>$value</b>&nbsp;&nbsp;</td>
        <td></td>
      </tr>
        </table>
    </div><br />
        <div class="top">[ <a href="#top">Top</a> ]</div>
  </div>
  <hr />
	<a name="methodsetCurrencyCode"></a>
	<h3>static method setCurrencyCode <span class="smalllinenumber">[line 691]</span></h3>
	<div class="function">
    <table width="90%" border="0" cellspacing="0" cellpadding="1"><tr><td class="code_border">
    <table width="100%" border="0" cellspacing="0" cellpadding="2"><tr><td class="code">
		<code>static void setCurrencyCode(
[string
$pValue = '$'])</code>
    </td></tr></table>
    </td></tr></table><br />
	
		Set the currency code. Only used by PHPExcel_Style_NumberFormat::toFormattedString() 		to format output by PHPExcel_Writer_HTML and PHPExcel_Writer_PDF<br /><br /><br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>access:</b>&nbsp;&nbsp;</td><td>public</td>
  </tr>
</table>
</div>
<br /><br />

	
        <h4>Parameters:</h4>
    <div class="tags">
    <table border="0" cellspacing="0" cellpadding="0">
          <tr>
        <td class="type">string&nbsp;&nbsp;</td>
        <td><b>$pValue</b>&nbsp;&nbsp;</td>
        <td>Character for currency code</td>
      </tr>
        </table>
    </div><br />
        <div class="top">[ <a href="#top">Top</a> ]</div>
  </div>
  <hr />
	<a name="methodsetDecimalSeparator"></a>
	<h3>static method setDecimalSeparator <span class="smalllinenumber">[line 632]</span></h3>
	<div class="function">
    <table width="90%" border="0" cellspacing="0" cellpadding="1"><tr><td class="code_border">
    <table width="100%" border="0" cellspacing="0" cellpadding="2"><tr><td class="code">
		<code>static void setDecimalSeparator(
[string
$pValue = '.'])</code>
    </td></tr></table>
    </td></tr></table><br />
	
		Set the decimal separator. Only used by PHPExcel_Style_NumberFormat::toFormattedString()  to format output by PHPExcel_Writer_HTML and PHPExcel_Writer_PDF<br /><br /><br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>access:</b>&nbsp;&nbsp;</td><td>public</td>
  </tr>
</table>
</div>
<br /><br />

	
        <h4>Parameters:</h4>
    <div class="tags">
    <table border="0" cellspacing="0" cellpadding="0">
          <tr>
        <td class="type">string&nbsp;&nbsp;</td>
        <td><b>$pValue</b>&nbsp;&nbsp;</td>
        <td>Character for decimal separator</td>
      </tr>
        </table>
    </div><br />
        <div class="top">[ <a href="#top">Top</a> ]</div>
  </div>
  <hr />
	<a name="methodsetThousandsSeparator"></a>
	<h3>static method setThousandsSeparator <span class="smalllinenumber">[line 659]</span></h3>
	<div class="function">
    <table width="90%" border="0" cellspacing="0" cellpadding="1"><tr><td class="code_border">
    <table width="100%" border="0" cellspacing="0" cellpadding="2"><tr><td class="code">
		<code>static void setThousandsSeparator(
[string
$pValue = ','])</code>
    </td></tr></table>
    </td></tr></table><br />
	
		Set the thousands separator. Only used by PHPExcel_Style_NumberFormat::toFormattedString()  to format output by PHPExcel_Writer_HTML and PHPExcel_Writer_PDF<br /><br /><br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>access:</b>&nbsp;&nbsp;</td><td>public</td>
  </tr>
</table>
</div>
<br /><br />

	
        <h4>Parameters:</h4>
    <div class="tags">
    <table border="0" cellspacing="0" cellpadding="0">
          <tr>
        <td class="type">string&nbsp;&nbsp;</td>
        <td><b>$pValue</b>&nbsp;&nbsp;</td>
        <td>Character for thousands separator</td>
      </tr>
        </table>
    </div><br />
        <div class="top">[ <a href="#top">Top</a> ]</div>
  </div>
  <hr />
	<a name="methodSubstring"></a>
	<h3>static method Substring <span class="smalllinenumber">[line 573]</span></h3>
	<div class="function">
    <table width="90%" border="0" cellspacing="0" cellpadding="1"><tr><td class="code_border">
    <table width="100%" border="0" cellspacing="0" cellpadding="2"><tr><td class="code">
		<code>static string Substring(
[string
$pValue = ''], [
$pStart = 0], [
$pLength = 0], int
$start, int
$length)</code>
    </td></tr></table>
    </td></tr></table><br />
	
		Get a substring of a UTF-8 encoded string<br /><br /><br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>access:</b>&nbsp;&nbsp;</td><td>public</td>
  </tr>
</table>
</div>
<br /><br />

	
        <h4>Parameters:</h4>
    <div class="tags">
    <table border="0" cellspacing="0" cellpadding="0">
          <tr>
        <td class="type">string&nbsp;&nbsp;</td>
        <td><b>$pValue</b>&nbsp;&nbsp;</td>
        <td>UTF-8 encoded string</td>
      </tr>
          <tr>
        <td class="type">int&nbsp;&nbsp;</td>
        <td><b>$start</b>&nbsp;&nbsp;</td>
        <td>Start offset</td>
      </tr>
          <tr>
        <td class="type">int&nbsp;&nbsp;</td>
        <td><b>$length</b>&nbsp;&nbsp;</td>
        <td>Maximum number of characters in substring</td>
      </tr>
          <tr>
        <td class="type">&nbsp;&nbsp;</td>
        <td><b>$pStart</b>&nbsp;&nbsp;</td>
        <td></td>
      </tr>
          <tr>
        <td class="type">&nbsp;&nbsp;</td>
        <td><b>$pLength</b>&nbsp;&nbsp;</td>
        <td></td>
      </tr>
        </table>
    </div><br />
        <div class="top">[ <a href="#top">Top</a> ]</div>
  </div>
  <hr />
	<a name="methodSYLKtoUTF8"></a>
	<h3>static method SYLKtoUTF8 <span class="smalllinenumber">[line 702]</span></h3>
	<div class="function">
    <table width="90%" border="0" cellspacing="0" cellpadding="1"><tr><td class="code_border">
    <table width="100%" border="0" cellspacing="0" cellpadding="2"><tr><td class="code">
		<code>static string SYLKtoUTF8(
[string
$pValue = ''])</code>
    </td></tr></table>
    </td></tr></table><br />
	
		Convert SYLK encoded string to UTF-8<br /><br /><br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>return:</b>&nbsp;&nbsp;</td><td>UTF-8 encoded string</td>
  </tr>
  <tr>
    <td><b>access:</b>&nbsp;&nbsp;</td><td>public</td>
  </tr>
</table>
</div>
<br /><br />

	
        <h4>Parameters:</h4>
    <div class="tags">
    <table border="0" cellspacing="0" cellpadding="0">
          <tr>
        <td class="type">string&nbsp;&nbsp;</td>
        <td><b>$pValue</b>&nbsp;&nbsp;</td>
        <td></td>
      </tr>
        </table>
    </div><br />
        <div class="top">[ <a href="#top">Top</a> ]</div>
  </div>
  <hr />
	<a name="methodtestStringAsNumeric"></a>
	<h3>static method testStringAsNumeric <span class="smalllinenumber">[line 723]</span></h3>
	<div class="function">
    <table width="90%" border="0" cellspacing="0" cellpadding="1"><tr><td class="code_border">
    <table width="100%" border="0" cellspacing="0" cellpadding="2"><tr><td class="code">
		<code>static mixed testStringAsNumeric(
string
$value)</code>
    </td></tr></table>
    </td></tr></table><br />
	
		Retrieve any leading numeric part of a string, or return the full string if no leading numeric 	(handles basic integer or float, but not exponent or non decimal)<br /><br /><br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>return:</b>&nbsp;&nbsp;</td><td>string or only the leading numeric part of the string</td>
  </tr>
  <tr>
    <td><b>access:</b>&nbsp;&nbsp;</td><td>public</td>
  </tr>
</table>
</div>
<br /><br />

	
        <h4>Parameters:</h4>
    <div class="tags">
    <table border="0" cellspacing="0" cellpadding="0">
          <tr>
        <td class="type">string&nbsp;&nbsp;</td>
        <td><b>$value</b>&nbsp;&nbsp;</td>
        <td></td>
      </tr>
        </table>
    </div><br />
        <div class="top">[ <a href="#top">Top</a> ]</div>
  </div>
  <hr />
	<a name="methodUTF8toBIFF8UnicodeLong"></a>
	<h3>static method UTF8toBIFF8UnicodeLong <span class="smalllinenumber">[line 469]</span></h3>
	<div class="function">
    <table width="90%" border="0" cellspacing="0" cellpadding="1"><tr><td class="code_border">
    <table width="100%" border="0" cellspacing="0" cellpadding="2"><tr><td class="code">
		<code>static string UTF8toBIFF8UnicodeLong(
string
$value)</code>
    </td></tr></table>
    </td></tr></table><br />
	
		Converts a UTF-8 string into BIFF8 Unicode string data (16-bit string length)<br /><br /><p>Writes the string using uncompressed notation, no rich text, no Asian phonetics  If mbstring extension is not available, ASCII is assumed, and compressed notation is used  although this will give wrong results for non-ASCII strings  see OpenOffice.org's Documentation of the Microsoft Excel File Format, sect. 2.5.3</p><br /><br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>access:</b>&nbsp;&nbsp;</td><td>public</td>
  </tr>
</table>
</div>
<br /><br />

	
        <h4>Parameters:</h4>
    <div class="tags">
    <table border="0" cellspacing="0" cellpadding="0">
          <tr>
        <td class="type">string&nbsp;&nbsp;</td>
        <td><b>$value</b>&nbsp;&nbsp;</td>
        <td>UTF-8 encoded string</td>
      </tr>
        </table>
    </div><br />
        <div class="top">[ <a href="#top">Top</a> ]</div>
  </div>
  <hr />
	<a name="methodUTF8toBIFF8UnicodeShort"></a>
	<h3>static method UTF8toBIFF8UnicodeShort <span class="smalllinenumber">[line 433]</span></h3>
	<div class="function">
    <table width="90%" border="0" cellspacing="0" cellpadding="1"><tr><td class="code_border">
    <table width="100%" border="0" cellspacing="0" cellpadding="2"><tr><td class="code">
		<code>static string UTF8toBIFF8UnicodeShort(
string
$value, [
$arrcRuns = array()])</code>
    </td></tr></table>
    </td></tr></table><br />
	
		Converts a UTF-8 string into BIFF8 Unicode string data (8-bit string length)<br /><br /><p>Writes the string using uncompressed notation, no rich text, no Asian phonetics  If mbstring extension is not available, ASCII is assumed, and compressed notation is used  although this will give wrong results for non-ASCII strings  see OpenOffice.org's Documentation of the Microsoft Excel File Format, sect. 2.5.3</p><br /><br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>access:</b>&nbsp;&nbsp;</td><td>public</td>
  </tr>
</table>
</div>
<br /><br />

	
        <h4>Parameters:</h4>
    <div class="tags">
    <table border="0" cellspacing="0" cellpadding="0">
          <tr>
        <td class="type">string&nbsp;&nbsp;</td>
        <td><b>$value</b>&nbsp;&nbsp;</td>
        <td>UTF-8 encoded string</td>
      </tr>
          <tr>
        <td class="type">&nbsp;&nbsp;</td>
        <td><b>$arrcRuns</b>&nbsp;&nbsp;</td>
        <td></td>
      </tr>
        </table>
    </div><br />
        <div class="top">[ <a href="#top">Top</a> ]</div>
  </div>
  <hr />
	<a name="methodutf16_decode"></a>
	<h3>static method utf16_decode <span class="smalllinenumber">[line 528]</span></h3>
	<div class="function">
    <table width="90%" border="0" cellspacing="0" cellpadding="1"><tr><td class="code_border">
    <table width="100%" border="0" cellspacing="0" cellpadding="2"><tr><td class="code">
		<code>static string utf16_decode(
string
$str, [
$bom_be = true])</code>
    </td></tr></table>
    </td></tr></table><br />
	
		Decode UTF-16 encoded strings.<br /><br /><p>Can handle both BOM'ed data and un-BOM'ed data.  Assumes Big-Endian byte order if no BOM is available.  This function was taken from http://php.net/manual/en/function.utf8-decode.php  and $bom_be parameter added.</p><br /><br /><br />
<h4>Tags:</h4>
<div class="tags">
<table border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td><b>return:</b>&nbsp;&nbsp;</td><td>UTF-8 / ISO encoded data.</td>
  </tr>
  <tr>
    <td><b>author:</b>&nbsp;&nbsp;</td><td>vadik56</td>
  </tr>
  <tr>
    <td><b>author:</b>&nbsp;&nbsp;</td><td>Rasmus Andersson <a href="http://rasmusandersson.se/">http://rasmusandersson.se/</a></td>
  </tr>
  <tr>
    <td><b>version:</b>&nbsp;&nbsp;</td><td>0.2 / 2010-05-13</td>
  </tr>
  <tr>
    <td><b>access:</b>&nbsp;&nbsp;</td><td>public</td>
  </tr>
</table>
</div>
<br /><br />

	
        <h4>Parameters:</h4>
    <div class="tags">
    <table border="0" cellspacing="0" cellpadding="0">
          <tr>
        <td class="type">string&nbsp;&nbsp;</td>
        <td><b>$str</b>&nbsp;&nbsp;</td>
        <td>UTF-16 encoded data to decode.</td>
      </tr>
          <tr>
        <td class="type">&nbsp;&nbsp;</td>
        <td><b>$bom_be</b>&nbsp;&nbsp;</td>
        <td></td>
      </tr>
        </table>
    </div><br />
        <div class="top">[ <a href="#top">Top</a> ]</div>
  </div>

</div><br />

<hr />
<a name="class_consts"></a>
<h3>Class Constants</h3>
<div class="tags">
	<a name="constSTRING_REGEXP_FRACTION"></a>
	<p></p>
	<h4>STRING_REGEXP_FRACTION = <span class="value">&nbsp;'(-?)(\d+)\s+(\d+\/\d+)'</span></h4>
	<p>[line 41]</p>
  Regular Expressions<br /><br />
  <br />
	<div class="top">[ <a href="#top">Top</a> ]</div><br />
</div><br />

        <div class="credit">
		    <hr />
		    Documentation generated on Fri, 12 Oct 2012 00:18:04 +0200 by <a href="http://www.phpdoc.org">phpDocumentor 1.4.4</a>
	      </div>
      </td></tr></table>
    </td>
  </tr>
</table>

</body>
</html>